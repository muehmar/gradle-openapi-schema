allNecessityAndNullabilityVariantsTypeMapped[optionalListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * OptionalListWithNullableItems
 */
@JsonProperty("optionalListWithNullableItems")
public Builder setOptionalListWithNullableItems(List<String> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems;
  this.isOptionalListWithNullableItemsNotNull = optionalListWithNullableItems != null;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems(Optional<List<String>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems.orElse(null);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems_(List<Optional<String>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = unwrapNullableItemsList(optionalListWithNullableItems);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems_(Optional<List<Optional<String>>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems.map(l -> unwrapNullableItemsList(l)).orElse(null);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[optionalNullableListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
com.github.muehmar.openapi.util.Tristate
java.util.Optional

/**
 * OptionalNullableListWithNullableItems
 */
@JsonProperty("optionalNullableListWithNullableItems")
public Builder setOptionalNullableListWithNullableItems(List<String> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems;
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems == null;
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems(Tristate<List<String>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems.onValue(val -> val).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems_(List<Optional<String>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = unwrapNullableItemsList(optionalNullableListWithNullableItems);
  isOptionalNullableListWithNullableItemsNull = false;
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems_(Tristate<List<Optional<String>>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems.onValue(l -> unwrapNullableItemsList(l)).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[optionalNullableStringVal]=[
com.custom.CustomString
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
com.github.muehmar.openapi.util.Tristate

/**
 * OptionalNullableStringVal
 */
@JsonProperty("optionalNullableStringVal")
private Builder setOptionalNullableStringVal(String optionalNullableStringVal) {
  this.optionalNullableStringVal = optionalNullableStringVal;
  this.isOptionalNullableStringValNull = optionalNullableStringVal == null;
  return this;
}

/**
 * OptionalNullableStringVal
 */
@JsonIgnore
public Builder setOptionalNullableStringVal(CustomString optionalNullableStringVal) {
  this.optionalNullableStringVal = optionalNullableStringVal != null ? optionalNullableStringVal.asString() : null;
  this.isOptionalNullableStringValNull = optionalNullableStringVal == null;
  return this;
}

/**
 * OptionalNullableStringVal
 */
@JsonIgnore
public Builder setOptionalNullableStringVal(Tristate<CustomString> optionalNullableStringVal) {
  this.optionalNullableStringVal = optionalNullableStringVal.map(val -> val.asString()).onValue(val -> val).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableStringValNull = optionalNullableStringVal.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[optionalStringVal]=[
com.custom.CustomString
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * OptionalStringVal
 */
@JsonProperty("optionalStringVal")
private Builder setOptionalStringVal(String optionalStringVal) {
  this.optionalStringVal = optionalStringVal;
  this.isOptionalStringValNotNull = optionalStringVal != null;
  return this;
}

/**
 * OptionalStringVal
 */
@JsonIgnore
public Builder setOptionalStringVal(CustomString optionalStringVal) {
  this.optionalStringVal = optionalStringVal != null ? optionalStringVal.asString() : null;
  this.isOptionalStringValNotNull = optionalStringVal != null;
  return this;
}

/**
 * OptionalStringVal
 */
@JsonIgnore
public Builder setOptionalStringVal(Optional<CustomString> optionalStringVal) {
  this.optionalStringVal = optionalStringVal.map(val -> val.asString()).orElse(null);
  this.isOptionalStringValNotNull = true;
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[requiredListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredListWithNullableItems
 */
@JsonProperty("requiredListWithNullableItems")
private Builder setRequiredListWithNullableItems(List<String> requiredListWithNullableItems) {
  this.requiredListWithNullableItems = requiredListWithNullableItems;
  return this;
}

/**
 * RequiredListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredListWithNullableItems_(List<Optional<String>> requiredListWithNullableItems) {
  this.requiredListWithNullableItems = unwrapNullableItemsList(requiredListWithNullableItems);
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[requiredNullableListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredNullableListWithNullableItems
 */
@JsonProperty("requiredNullableListWithNullableItems")
private Builder setRequiredNullableListWithNullableItems(List<String> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems;
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems(Optional<List<String>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems.orElse(null);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems_(List<Optional<String>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = unwrapNullableItemsList(requiredNullableListWithNullableItems);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems_(Optional<List<Optional<String>>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems.map(l -> unwrapNullableItemsList(l)).orElse(null);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[requiredNullableStringVal]=[
com.custom.CustomString
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredNullableStringVal
 */
@JsonProperty("requiredNullableStringVal")
private Builder setRequiredNullableStringVal(String requiredNullableStringVal) {
  this.requiredNullableStringVal = requiredNullableStringVal;
  this.isRequiredNullableStringValPresent = true;
  return this;
}

/**
 * RequiredNullableStringVal
 */
@JsonIgnore
private Builder setRequiredNullableStringVal(CustomString requiredNullableStringVal) {
  this.requiredNullableStringVal = requiredNullableStringVal != null ? requiredNullableStringVal.asString() : null;
  this.isRequiredNullableStringValPresent = true;
  return this;
}

/**
 * RequiredNullableStringVal
 */
@JsonIgnore
private Builder setRequiredNullableStringVal(Optional<CustomString> requiredNullableStringVal) {
  this.requiredNullableStringVal = requiredNullableStringVal.map(val -> val.asString()).orElse(null);
  this.isRequiredNullableStringValPresent = true;
  return this;
}

]


allNecessityAndNullabilityVariantsTypeMapped[requiredStringVal]=[
com.custom.CustomString
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty

/**
 * RequiredStringVal
 */
@JsonProperty("requiredStringVal")
private Builder setRequiredStringVal(String requiredStringVal) {
  this.requiredStringVal = requiredStringVal;
  return this;
}

/**
 * RequiredStringVal
 */
@JsonIgnore
private Builder setRequiredStringVal(CustomString requiredStringVal) {
  this.requiredStringVal = requiredStringVal != null ? requiredStringVal.asString() : null;
  return this;
}

]


allNecessityAndNullabilityVariants[optionalListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * OptionalListWithNullableItems
 */
@JsonProperty("optionalListWithNullableItems")
public Builder setOptionalListWithNullableItems(List<String> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems;
  this.isOptionalListWithNullableItemsNotNull = optionalListWithNullableItems != null;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems(Optional<List<String>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems.orElse(null);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems_(List<Optional<String>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = unwrapNullableItemsList(optionalListWithNullableItems);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

/**
 * OptionalListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalListWithNullableItems_(Optional<List<Optional<String>>> optionalListWithNullableItems) {
  this.optionalListWithNullableItems = optionalListWithNullableItems.map(l -> unwrapNullableItemsList(l)).orElse(null);
  this.isOptionalListWithNullableItemsNotNull = true;
  return this;
}

]


allNecessityAndNullabilityVariants[optionalNullableListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
com.github.muehmar.openapi.util.Tristate
java.util.Optional

/**
 * OptionalNullableListWithNullableItems
 */
@JsonProperty("optionalNullableListWithNullableItems")
public Builder setOptionalNullableListWithNullableItems(List<String> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems;
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems == null;
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems(Tristate<List<String>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems.onValue(val -> val).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems_(List<Optional<String>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = unwrapNullableItemsList(optionalNullableListWithNullableItems);
  isOptionalNullableListWithNullableItemsNull = false;
  return this;
}

/**
 * OptionalNullableListWithNullableItems
 */
@JsonIgnore
public Builder setOptionalNullableListWithNullableItems_(Tristate<List<Optional<String>>> optionalNullableListWithNullableItems) {
  this.optionalNullableListWithNullableItems = optionalNullableListWithNullableItems.onValue(l -> unwrapNullableItemsList(l)).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableListWithNullableItemsNull = optionalNullableListWithNullableItems.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

]


allNecessityAndNullabilityVariants[optionalNullableStringVal]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
com.github.muehmar.openapi.util.Tristate

/**
 * OptionalNullableStringVal
 */
@JsonProperty("optionalNullableStringVal")
public Builder setOptionalNullableStringVal(String optionalNullableStringVal) {
  this.optionalNullableStringVal = optionalNullableStringVal;
  this.isOptionalNullableStringValNull = optionalNullableStringVal == null;
  return this;
}

/**
 * OptionalNullableStringVal
 */
@JsonIgnore
public Builder setOptionalNullableStringVal(Tristate<String> optionalNullableStringVal) {
  this.optionalNullableStringVal = optionalNullableStringVal.onValue(val -> val).onNull(() -> null).onAbsent(() -> null);
  this.isOptionalNullableStringValNull = optionalNullableStringVal.onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false);
  return this;
}

]


allNecessityAndNullabilityVariants[optionalStringVal]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * OptionalStringVal
 */
@JsonProperty("optionalStringVal")
public Builder setOptionalStringVal(String optionalStringVal) {
  this.optionalStringVal = optionalStringVal;
  this.isOptionalStringValNotNull = optionalStringVal != null;
  return this;
}

/**
 * OptionalStringVal
 */
@JsonIgnore
public Builder setOptionalStringVal(Optional<String> optionalStringVal) {
  this.optionalStringVal = optionalStringVal.orElse(null);
  this.isOptionalStringValNotNull = true;
  return this;
}

]


allNecessityAndNullabilityVariants[requiredListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredListWithNullableItems
 */
@JsonProperty("requiredListWithNullableItems")
private Builder setRequiredListWithNullableItems(List<String> requiredListWithNullableItems) {
  this.requiredListWithNullableItems = requiredListWithNullableItems;
  return this;
}

/**
 * RequiredListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredListWithNullableItems_(List<Optional<String>> requiredListWithNullableItems) {
  this.requiredListWithNullableItems = unwrapNullableItemsList(requiredListWithNullableItems);
  return this;
}

]


allNecessityAndNullabilityVariants[requiredNullableListWithNullableItems]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredNullableListWithNullableItems
 */
@JsonProperty("requiredNullableListWithNullableItems")
private Builder setRequiredNullableListWithNullableItems(List<String> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems;
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems(Optional<List<String>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems.orElse(null);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems_(List<Optional<String>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = unwrapNullableItemsList(requiredNullableListWithNullableItems);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

/**
 * RequiredNullableListWithNullableItems
 */
@JsonIgnore
private Builder setRequiredNullableListWithNullableItems_(Optional<List<Optional<String>>> requiredNullableListWithNullableItems) {
  this.requiredNullableListWithNullableItems = requiredNullableListWithNullableItems.map(l -> unwrapNullableItemsList(l)).orElse(null);
  this.isRequiredNullableListWithNullableItemsPresent = true;
  return this;
}

]


allNecessityAndNullabilityVariants[requiredNullableStringVal]=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional

/**
 * RequiredNullableStringVal
 */
@JsonProperty("requiredNullableStringVal")
private Builder setRequiredNullableStringVal(String requiredNullableStringVal) {
  this.requiredNullableStringVal = requiredNullableStringVal;
  this.isRequiredNullableStringValPresent = true;
  return this;
}

/**
 * RequiredNullableStringVal
 */
@JsonIgnore
private Builder setRequiredNullableStringVal(Optional<String> requiredNullableStringVal) {
  this.requiredNullableStringVal = requiredNullableStringVal.orElse(null);
  this.isRequiredNullableStringValPresent = true;
  return this;
}

]


allNecessityAndNullabilityVariants[requiredStringVal]=[
com.fasterxml.jackson.annotation.JsonProperty

/**
 * RequiredStringVal
 */
@JsonProperty("requiredStringVal")
private Builder setRequiredStringVal(String requiredStringVal) {
  this.requiredStringVal = requiredStringVal;
  return this;
}

]