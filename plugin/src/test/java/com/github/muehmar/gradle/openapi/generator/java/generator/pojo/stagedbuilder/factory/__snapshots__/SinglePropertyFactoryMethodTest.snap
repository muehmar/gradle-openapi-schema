members[birthdate]=[
java.time.LocalDate

/**
 * Convenience factory method for DTO's with a single property. Instantiates
 * directly the DTO with the given property. This method is only generated if the
 * DTO has exactly one property.
 */
public static ObjectPojo1Dto fromBirthdate(LocalDate birthdate) {
  return fullBuilder().setBirthdate(birthdate).build();
}

]


members[optionalNullableStringVal]=[
com.github.muehmar.openapi.util.Tristate

/**
 * Convenience factory method for DTO's with a single property. Instantiates
 * directly the DTO with the given property. This method is only generated if the
 * DTO has exactly one property.
 */
public static ObjectPojo1Dto fromOptionalNullableStringVal(String optionalNullableStringVal) {
  return fullBuilder().setOptionalNullableStringVal(optionalNullableStringVal).build();
}

/**
 * Convenience factory method for DTO's with a single property. Instantiates
 * directly the DTO with the given property. This method is only generated if the
 * DTO has exactly one property.
 */
public static ObjectPojo1Dto fromOptionalNullableStringVal(Tristate<String> optionalNullableStringVal) {
  return fullBuilder().setOptionalNullableStringVal(optionalNullableStringVal).build();
}
]


members[optionalStringVal]=[
java.util.Optional

/**
 * Convenience factory method for DTO's with a single property. Instantiates
 * directly the DTO with the given property. This method is only generated if the
 * DTO has exactly one property.
 */
public static ObjectPojo1Dto fromOptionalStringVal(String optionalStringVal) {
  return fullBuilder().setOptionalStringVal(optionalStringVal).build();
}

/**
 * Convenience factory method for DTO's with a single property. Instantiates
 * directly the DTO with the given property. This method is only generated if the
 * DTO has exactly one property.
 */
public static ObjectPojo1Dto fromOptionalStringVal(Optional<String> optionalStringVal) {
  return fullBuilder().setOptionalStringVal(optionalStringVal).build();
}

]


members[stringVal, birthdate]=[
.
.

]