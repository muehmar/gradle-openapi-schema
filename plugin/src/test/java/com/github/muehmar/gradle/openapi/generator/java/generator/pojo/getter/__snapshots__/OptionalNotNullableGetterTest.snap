com.github.muehmar.gradle.openapi.generator.java.generator.pojo.getter.OptionalNotNullableGetterTest.generator_when_deprecatedAnnotation_then_correctOutputAndRefs=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonInclude
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional
javax.validation.constraints.Pattern

/**
 * stringVal
 */
@JsonIgnore
public Optional<String> getStringVal() {
  return Optional.ofNullable(stringVal);
}

/**
 * stringVal
 */
@JsonIgnore
public String getStringValOr(String defaultValue) {
  return this.stringVal == null ? defaultValue : this.stringVal;
}

/**
 * @deprecated This method is intended to be used only by frameworks for validation
 * or serialisation.
 */
@Deprecated
@JsonProperty("stringVal")
@JsonInclude(JsonInclude.Include.NON_NULL)
@Pattern(regexp="Hello")
public String getStringValRaw() {
  return stringVal;
}
]


com.github.muehmar.gradle.openapi.generator.java.generator.pojo.getter.OptionalNotNullableGetterTest.generator_when_disabledJacksonAndEnabledValidation_then_correctOutputAndRefs=[
java.util.Optional
javax.validation.constraints.Pattern

/**
 * stringVal
 */
public Optional<String> getStringVal() {
  return Optional.ofNullable(stringVal);
}

/**
 * stringVal
 */
public String getStringValOr(String defaultValue) {
  return this.stringVal == null ? defaultValue : this.stringVal;
}

@Pattern(regexp="Hello")
private String getStringValRaw() {
  return stringVal;
}
]


com.github.muehmar.gradle.openapi.generator.java.generator.pojo.getter.OptionalNotNullableGetterTest.generator_when_disabledJacksonAndValidation_then_correctOutputAndRefs=[
java.util.Optional

/**
 * stringVal
 */
public Optional<String> getStringVal() {
  return Optional.ofNullable(stringVal);
}

/**
 * stringVal
 */
public String getStringValOr(String defaultValue) {
  return this.stringVal == null ? defaultValue : this.stringVal;
}
]


com.github.muehmar.gradle.openapi.generator.java.generator.pojo.getter.OptionalNotNullableGetterTest.generator_when_enabledJackson_then_correctOutputAndRefs=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonInclude
com.fasterxml.jackson.annotation.JsonProperty
java.util.Optional
javax.validation.constraints.Pattern

/**
 * stringVal
 */
@JsonIgnore
public Optional<String> getStringVal() {
  return Optional.ofNullable(stringVal);
}

/**
 * stringVal
 */
@JsonIgnore
public String getStringValOr(String defaultValue) {
  return this.stringVal == null ? defaultValue : this.stringVal;
}

@JsonProperty("stringVal")
@JsonInclude(JsonInclude.Include.NON_NULL)
@Pattern(regexp="Hello")
private String getStringValRaw() {
  return stringVal;
}
]


com.github.muehmar.gradle.openapi.generator.java.generator.pojo.getter.OptionalNotNullableGetterTest.generator_when_suffixForOptionalNotNullable_then_correctOutputAndRefs=[
java.util.Optional

/**
 * stringVal
 */
public Optional<String> getStringValOpt() {
  return Optional.ofNullable(stringVal);
}

/**
 * stringVal
 */
public String getStringValOr(String defaultValue) {
  return this.stringVal == null ? defaultValue : this.stringVal;
}
]


valueTypeOfArrayHasConstraints=[
com.fasterxml.jackson.annotation.JsonIgnore
com.fasterxml.jackson.annotation.JsonInclude
com.fasterxml.jackson.annotation.JsonProperty
java.util.List
java.util.Optional
javax.validation.constraints.Max
javax.validation.constraints.Min
javax.validation.constraints.Size

/**
 * List
 */
@JsonIgnore
public Optional<List<Integer>> getListVal() {
  return Optional.ofNullable(listVal);
}

/**
 * List
 */
@JsonIgnore
public List<Integer> getListValOr(List<Integer> defaultValue) {
  return this.listVal == null ? defaultValue : this.listVal;
}

@JsonProperty("listVal")
@JsonInclude(JsonInclude.Include.NON_NULL)
@Size(min = 5)
private List<@Min(value = 5) @Max(value = 10) Integer> getListValRaw() {
  return listVal;
}
]