plugins {
    id 'java-gradle-plugin'
    id 'java-test-fixtures'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'openapischema.java8'
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    implementation libs.swaggerParser

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    implementation libs.pojoBuilder.annotations
    annotationProcessor libs.pojoBuilder

    implementation libs.codeGenerator

    testImplementation testFixtures(project(":java-snapshot"))

    testImplementation testLibs.bundles.mockito

    testRuntimeOnly files(createClasspathManifest)
}

group = 'com.github.muehmar.openapischema'

pluginBundle {
    website = "https://github.com/muehmar/gradle-openapi-schema"
    vcsUrl = "https://github.com/muehmar/gradle-openapi-schema.git"
    tags = ['java', 'openapi']
}

gradlePlugin {
    plugins {
        openApiSchemaPlugin {
            id = 'com.github.muehmar.openapischema'
            displayName = 'OpenApiSchema'
            description = 'Generate schema sources for Java from an OpenAPI 3.0 specification.'
            implementationClass = 'com.github.muehmar.gradle.openapi.OpenApiSchemaGenerator'
        }
    }
}

test {
    def updateSnapshot = project.properties["updateSnapshot"]
    if (updateSnapshot != null) {
        systemProperties.put("updateSnapshot", updateSnapshot)
    }
}

