plugins {
    alias(pluginLibs.plugins.openApiSchema)
    id "com.diffplug.spotless"
    id 'openapischema.java11'
    id 'java-test-fixtures'
}

sourceSets {
    generated {
        java {}
    }
    noJsonAndValidation {
        java {}
    }
    noJson {
        java {}
    }
    noValidation {
        java {}
    }
    test {
        compileClasspath += generated.output
        runtimeClasspath += generated.output
    }

}

dependencies {
    implementation sampleLibs.bundles.jackson
    implementation sampleLibs.jackson.dataformat.xml
    implementation sampleLibs.javax2.validation.api

    noValidationImplementation sampleLibs.jackson.databind
    noValidationImplementation sampleLibs.jackson.annotations

    noJsonImplementation sampleLibs.javax2.validation.api

    testImplementation testLibs.junit
    testImplementation testLibs.junit.params

    testImplementation sampleLibs.hibernate6.validator
    testRuntimeOnly sampleLibs.glassfish.javax.el3

    testImplementation testLibs.reflections
    testImplementation testFixtures(project(":java-snapshot"))
}

def specifications =
        [
                [name: 'v1', file: 'openapi-v1.yml'],
                [name: 'v2', file: 'openapi-v2.yml'],
                [name: 'inlineobject', file: 'openapi-inline-object.yml'],
                [name: 'nullability', file: 'openapi-nullability.yml'],
                [name: 'array', file: 'openapi-array.yml'],
                [name: 'remoteref', file: 'openapi-remote-ref-main.yml'],
                [name: 'freeform', file: 'openapi-freeform.yml'],
                [name: 'validation', file: 'openapi-validation.yml'],
                [name: 'oneof', file: 'openapi-oneof.yml'],
                [name: 'oneofenumdiscriminator', file: 'openapi-oneof-enum-discriminator.yml'],
                [name: 'anyof', file: 'openapi-anyof.yml'],
                [name: 'allof', file: 'openapi-allof.yml'],
                [name: 'identifiers', file: 'openapi-identifiers.yml'],
                [name: 'readwriteonly', file: 'openapi-read-only-write-only.yml'],
                [name: 'specv21', file: 'openapi-spec-version-v31.yml'],
                [name: 'fullobject', file: 'openapi-full-object.yml'],
                [name: 'additionalproperties', file: 'openapi-additional-properties.yml'],
                [name: 'sasis', file: 'sasis-api.json'],
                [name: 'promotion', file: 'openapi-promotion.yml'],
                [name: 'overrideglobalconfig', file: 'openapi-override-global-config.yml'],
                [name: 'nullableitemslist', file: 'openapi-nullable-items-list.yml'],
                [name: 'typemappingwithconversion', file: 'openapi-type-mapping-with-conversion.yml'],
                [name: 'nonstrictoneofvalidation', file: 'openapi-non-strict-oneof-validation.yml'],
                [name: 'xml', file: 'openapi-xml.yml']
        ]

def issueNumbers = [
        '71',
        '158',
        '159',
        '182',
        '185',
        '190',
        '191',
        '192',
        '193',
        '195',
        '209',
        '227',
        '229',
        '234',
        '238',
        '244',
        '248',
        '259',
        '263',
        '272',
        '275',
        '280',
        '278',
        '287',
        '307',
        '310',
        '339',
        '341',
        '343',
        '351',
        '352']

specifications.addAll(issueNumbers.collect { issueNumber -> [name: "Issue${issueNumber}", file: "issues/openapi-issue-${issueNumber}.yml"] })

compileJava.dependsOn compileGeneratedJava
compileJava.dependsOn compileNoJsonJava
compileJava.dependsOn compileNoValidationJava
compileJava.dependsOn compileNoJsonAndValidationJava

openApiGenerator {
    sourceSet = 'main'
    outputDir = project.layout.buildDirectory.dir("generated/openapi")
    jsonSupport = "jackson"
    suffix = "Dto"
    enableValidation = true
    builderMethodPrefix = "set"

    enumDescriptionExtraction {
        enabled = true
        prefixMatcher = "`__ENUM__`:"
        failOnIncompleteDescriptions = true
    }

    formatTypeMapping {
        formatType = "username"
        classType = "com.package.UserName"
        conversion.fromCustomType = "getValue"
        conversion.toCustomType = "UserName#fromString"
    }

    formatTypeMapping {
        formatType = "password"
        classType = "com.package.Password"
        conversion.fromCustomType = "getValue"
        conversion.toCustomType = "Password#fromString"
    }

    validationMethods {
        getterSuffix = "Raw"
    }

    warnings {
        disableWarnings = false
        failOnWarnings = true
        failOnUnsupportedValidation = true
        failOnMissingMappingConversion = true
    }

    constantSchemaNameMapping {
        constant = "Sasis.Register.CareProvider.Common.Models.ApiGateway.V1."
        replacement = ""
    }

    constantSchemaNameMapping {
        constant = "."
        replacement = ""
    }

    stagedBuilder {
        enabled = true
    }

    schemas {
        apiV1 {
            inputSpec = "$projectDir/src/main/resources/openapi-v1.yml"
            packageName = "com.github.muehmar.gradle.openapi.v1"

            formatTypeMapping {
                formatType = "MedicationKind"
                classType = "com.github.muehmar.gradle.openapi.v1.MedicationKind"
            }

            classMapping {
                fromClass = "List"
                toClass = "java.util.ArrayList"
            }

            warnings {
                failOnMissingMappingConversion = false
            }
        }
        apiV2 {
            inputSpec = "$projectDir/src/main/resources/openapi-v2.yml"
            packageName = "com.github.muehmar.gradle.openapi.v2"
            builderMethodPrefix = ""
        }
        inlineObject {
            inputSpec = "$projectDir/src/main/resources/openapi-inline-object.yml"
            packageName = "com.github.muehmar.gradle.openapi.inlineobject"
        }
        nullability {
            inputSpec = "$projectDir/src/main/resources/openapi-nullability.yml"
            packageName = "com.github.muehmar.gradle.openapi.nullability"

            validationMethods {
                getterSuffix = "Raw"
                modifier = "public"
                deprecatedAnnotation = true
            }
        }
        array {
            inputSpec = "$projectDir/src/main/resources/openapi-array.yml"
            packageName = "com.github.muehmar.gradle.openapi.array"
        }
        remoteRef {
            inputSpec = "$projectDir/src/main/resources/openapi-remote-ref-main.yml"
            packageName = "com.github.muehmar.gradle.openapi.remoteref"
        }
        excludeSchema {
            inputSpec = "$projectDir/src/main/resources/openapi-excluded-schema.yml"
            packageName = "com.github.muehmar.gradle.openapi.excludedschema"
            excludeSchemas = ["User"] // This schema contains an unsupported URL-reference
        }
        freeForm {
            inputSpec = "$projectDir/src/main/resources/openapi-freeform.yml"
            packageName = "com.github.muehmar.gradle.openapi.freeform"
        }
        validation {
            inputSpec = "$projectDir/src/main/resources/openapi-validation.yml"
            packageName = "com.github.muehmar.gradle.openapi.validation"

            formatTypeMapping {
                formatType = "name"
                classType = "com.github.muehmar.gradle.openapi.validation.Name"
            }

            warnings {
                failOnUnsupportedValidation = false
                failOnMissingMappingConversion = false
            }
        }
        oneOf {
            inputSpec = "$projectDir/src/main/resources/openapi-oneof.yml"
            packageName = "com.github.muehmar.gradle.openapi.oneof"
        }
        anyOf {
            inputSpec = "$projectDir/src/main/resources/openapi-anyof.yml"
            packageName = "com.github.muehmar.gradle.openapi.anyof"
        }
        allOf {
            inputSpec = "$projectDir/src/main/resources/openapi-allof.yml"
            packageName = "com.github.muehmar.gradle.openapi.allof"
        }
        identifiers {
            inputSpec = "$projectDir/src/main/resources/openapi-identifiers.yml"
            packageName = "com.github.muehmar.gradle.openapi.identifiers"
            suffix = ""
        }
        readOnlyWriteOnly {
            inputSpec = "$projectDir/src/main/resources/openapi-read-only-write-only.yml"
            packageName = "com.github.muehmar.gradle.openapi.readwriteonly"
        }
        specVersionV31 {
            inputSpec = "$projectDir/src/main/resources/openapi-spec-version-v31.yml"
            packageName = "com.github.muehmar.gradle.openapi.specversionv31"
        }
        fullObject {
            inputSpec = "$projectDir/src/main/resources/openapi-full-object.yml"
            packageName = "com.github.muehmar.gradle.openapi.fullobject"
        }
        additionalProperties {
            inputSpec = "$projectDir/src/main/resources/openapi-additional-properties.yml"
            packageName = "com.github.muehmar.gradle.openapi.additionalproperties"
        }
        sasis {
            inputSpec = "$projectDir/src/main/resources/sasis-api.json"
            packageName = "com.github.muehmar.gradle.openapi.sasis"

            formatTypeMapping {
                formatType = "date-time"
                classType = "java.time.LocalDate"
            }

            warnings {
                failOnMissingMappingConversion = false
            }
        }
        promotion {
            inputSpec = "$projectDir/src/main/resources/openapi-promotion.yml"
            packageName = "com.github.muehmar.gradle.openapi.promotion"
        }
        overrideGlobalConfig {
            sourceSet = "generated"
            inputSpec = "$projectDir/src/main/resources/openapi-override-global-config.yml"
            outputDir = project.layout.buildDirectory.dir("generated/openapi-override")
            packageName = "com.github.muehmar.gradle.openapi.overrideglobalconfig"
            suffix = ""
            jsonSupport = "none"
            enableValidation = false
            builderMethodPrefix = ""
        }
        oneOfEnumDiscriminator {
            inputSpec = "$projectDir/src/main/resources/openapi-oneof-enum-discriminator.yml"
            packageName = "com.github.muehmar.gradle.openapi.oneofenumdiscriminator"
        }
        nullableItemsList {
            inputSpec = "$projectDir/src/main/resources/openapi-nullable-items-list.yml"
            packageName = "com.github.muehmar.gradle.openapi.nullableitemslist"
        }
        typeMappingWithConversion {
            inputSpec = "$projectDir/src/main/resources/openapi-type-mapping-with-conversion.yml"
            packageName = "com.github.muehmar.gradle.openapi.typemappingwithconversion"

            classMapping {
                fromClass = "String"
                toClass = "com.github.muehmar.gradle.openapi.typemappingwithconversion.CustomString"
                conversion.fromCustomType = "getValue"
                conversion.toCustomType = "CustomString#fromString"
            }

            classMapping {
                fromClass = "List"
                toClass = "com.github.muehmar.gradle.openapi.typemappingwithconversion.CustomList"
                conversion.fromCustomType = "asList"
                conversion.toCustomType = "CustomList#fromList"
            }

            dtoMapping {
                dtoName = "AddressDto"
                customType = "com.github.muehmar.gradle.openapi.typemappingwithconversion.CustomAddress"
                conversion.fromCustomType = "toDto"
                conversion.toCustomType = "CustomAddress#fromDto"
            }

            dtoMapping {
                dtoName = "FhirDataDto"
                customType = "com.github.muehmar.gradle.openapi.typemappingwithconversion.FhirData"
                disableMissingConversionWarning = true
            }
        }
        nonStrictOneOfValidation {
            inputSpec = "$projectDir/src/main/resources/openapi-non-strict-oneof-validation.yml"
            packageName = "com.github.muehmar.gradle.openapi.nonstrictoneofvalidation"
            nonStrictOneOfValidation = true
        }
        xml {
            inputSpec = "$projectDir/src/main/resources/openapi-xml.yml"
            packageName = "com.github.muehmar.gradle.openapi.xml"
            xmlSupport = "jackson"
        }
        issueNumbers.forEach { issueNumber ->
            {
                "Issue${issueNumber}" {
                    inputSpec = "$projectDir/src/main/resources/issues/openapi-issue-${issueNumber}.yml"
                    packageName = "com.github.muehmar.gradle.openapi.issues.issue${issueNumber}"
                }
            }
        }

        Issue352 {
            allowNullableForEnums = true
        }

        Issue307 {
            classMapping {
                fromClass = "String"
                toClass = "com.github.muehmar.gradle.openapi.typemappingwithconversion.CustomString"
                conversion.fromCustomType = "getValue"
                conversion.toCustomType = "CustomString#fromString"
            }
        }

        specifications.forEach { spec ->
            {
                "noValidation${spec.name}" {
                    sourceSet = "noValidation"
                    outputDir = project.layout.buildDirectory.dir("generated/openapi-no-validation")
                    inputSpec = "$projectDir/src/main/resources/${spec.file}"
                    packageName = "${project.group}.${project.name}.api.novalidation.${spec.name}.model"
                    enableValidation = false
                }
            }
        }

        specifications.forEach { spec ->
            {
                "noJsonSupport${spec.name}" {
                    sourceSet = "noJson"
                    outputDir = project.layout.buildDirectory.dir("generated/openapi-no-json")
                    inputSpec = "$projectDir/src/main/resources/${spec.file}"
                    packageName = "${project.group}.${project.name}.api.nojsonsupport.${spec.name}.model"
                    jsonSupport = "none"
                }
            }
        }

        specifications.forEach { spec ->
            {
                "noJsonSupportAndValidation${spec.name}" {
                    sourceSet = "noJsonAndValidation"
                    outputDir = project.layout.buildDirectory.dir("generated/openapi-no-json-no-validation")
                    inputSpec = "$projectDir/src/main/resources/${spec.file}"
                    packageName = "${project.group}.${project.name}.api.nojsonsupportandvalidation.${spec.name}.model"
                    jsonSupport = "none"
                    enableValidation = false
                }
            }
        }
    }
}

afterEvaluate {
    tasks.named("generateRemoteRefModel") {
        inputs.file("$projectDir/src/main/resources/openapi-remote-ref-sub.yml")
    }
}

test {
    def updateSnapshot = project.properties["updateSnapshot"]
    if (updateSnapshot != null) {
        systemProperties.put("updateSnapshot", updateSnapshot)
    }
}

